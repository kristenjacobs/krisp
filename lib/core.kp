(do 
 
  (def inc (fn (x)
    (+ x 1)))

  (def dec (fn (x)
    (- x 1)))

  (def reduce (fn (f v l)
    (if (= l (list))
      v
      (reduce f (f v (first l)) (rest l)))))

  (def map (fn (f l)
    (reduce (fn (result element) (conj result (f element))) 
            (list) l))))
