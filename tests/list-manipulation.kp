(do

  (def squares-to-5 (fn () 
    (list (* 1 1) (* 2 2) (* 3 3) (* 4 4) (* 5 5))))

  (let squares (squares-to-5))
  (print (first squares))
  (print (rest squares))
  (print (conj squares (* 6 6)))
  (print (cons squares (* 6 6))))
